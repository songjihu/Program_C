#define _CRT_SECURE_NO_WARNINGS
// Output.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include "sjh.h"


int main()
{
	//----基础----
	/*void output(); //输出函数
	void input();  //输入函数
	void process_number_e(); //例子:处理一串数字
	void process_string_e();//例子:处理字符串
	void m_and_f();//申请和释放空间
	void about_math();//数学相关函数
	//ASCII 0-48 A-65 a-97
	void about_struct();//结构体相关定义
	void about_struct_e();//结构体例子*/

	//----常用小算法----
	/*void find_prime();//*寻找素数
	void prime_factorization();//**分解质因数
	void approximate_number();//**约数
	void statistical_number();//统计字母和数字出现个数
	void positive_number();//统计正整数出现个数
	void divide_number();//以进制分解数字
	void b_and_s();//**求最大公约数和最小公倍数
	void bubble_sort();//*冒泡排序*/

	//----习题1----
	
	//P11[题型一]数组分类:将a[n]划分为左边为奇数，右边为偶数
	/*int a[10] = { 1,2,3,4,5,6,7,8,9,10 },n=10;
	void dwide(int a[], int n);*/

	//[题型二]数组逆序:①将m*n二维数组首尾互换,例如+1 -1 +2 -2互换
	/*int b[3][4] = { {0,1,2,3},{10,11,12,13},{20,21,22,23} };
	void swapt(int a[3][4]);*/

	//②将一维数组A[m+n]a1-am与b1-bn整体互换位置
	/*
	int c[11] = { 1,2,3,4,5,6,7,8,9,10,11 }, left_num = 5, right_num = 6, n = 11;
	void reverse(int a[], int n);//颠倒数组
	void print_ai(int a[], int n);//打印数组
	
	reverse(c,n);
	reverse(c, right_num);
	reverse(c+right_num, left_num);
	print_ai(c, n);
	*/

	//③一个数组中有100个正整数，将所有偶数（奇数）从小到大排在前半部分（后半部分）
	/*int aa[8] = { 1,4,3,2,5,9,7 };//输出 2 4 1 3 5 7 9
	void sort(int a[],int n);
	int n = 7; int i = 0, j = n - 1, p = 0, q = 0,temp;
	//先划分好奇数偶数部分
	while (i < j) {
		//处理偶数
		while (aa[i] % 2 == 0) {
			i++;
			p++;
		}
		//处理奇数
		while (aa[j] % 2 != 0) {
			j--;
			q++;
		}
		if (i < j) {
			temp = aa[i];
			aa[i] = aa[j];
			aa[j] = temp;
		}
	}
	//再排序
	sort(aa, p);
	sort(aa+p, q);

	print_ai(aa, n);

	int test[10] = { 1,4,56,3,2,5,4,3,33 }; n = 9;
	sort(test, n);
	print_ai(test, n);
	*/

	//P12[题型三]数组排序:①将2个有序数组合并为1个有序数组 略
	
	//②从大小为15的有序数组中使用折半查找找出下标 略
	
	//P13[题型三]平台问题:①从一维数组中求最长平台长度 略 ② 同 略

	//P14[题型四]特殊值:①从一维数组中移动特殊值到尾部,且其他值次序不变
	/*int a[8] = {7,0,0,3,0,5,0},n=7;
	move_zero(a, n);
	print_ai(a, n);*/

	//②在一维数组中移位删属于特定区间的(<=y&&>=x)元素,返回删除后元素个数
	/*int a[8] = { 1,2,3,4,5,6,7 },n=7;
	print_ai(a, move_bettwen(a, n, 2, 4));*/

	//③ 同① 略

	//④删除数组中重复的元素，并将剩余的元素移到前边
	/*int a[8] = { 1,1,2,3,4,4,1 },n=7;
	del_same(a, n);
	print_ai(a, n);*/

	//⑤10乘10二维数组中每行最大元素构成向量B，每列最小元素构成向量C，求B·C 略

	//⑥判定在一维数组a中是否存在a[i]等于前i-1个元素之和 略

	//⑦删除一维数组中所有素数（保持次序，无新数组，打印处理后数组，返回剩余元素个数）
	/*int a[8] = { 1,2,3,4,5,6,7 } ,n = 7,t;
	t=del_sushu(a, n);
	print_ai(a, t);*/

	//⑧对字符串中所有字符按照ASCII码递增排序
	/*char a[8] = { 'd','a','c','b','f','e','h' }, n = 7;
	sort_string(a, n);
	print_ai_s(a, n);*/

	//⑨合并2个严格增序数组a b到a，且不另设数组，返回a的元素个数
	/*int a[8] = { 1,2,3 }, m = 3, b[4] = { 3,4,5 }, n = 3, t;
	t = merge_two(a, m, b, n);
	print_ai(a, t);*/

	//⑩使用数组精确计算M/N各小数位值(M<N)，若无限循环则输出循环节和起始位置(未完)
	/*int a[100] = { 0 }, start=0, end=0, m=5, n=95;
	M_and_N(a, m, n, start, end);*/

	//【题型七】数组查找/平台变型题 1.给S=00010111001110001111 返回N1=4 N0=3
	/*int S[22] = { 0,0,0,1,
	0,1,1,1,
	0,0,1,1,
	1,0,0,0,
	1,1,1,1 }, n = 20, N1, N0;
	maxLen(n, S, &N1, &N0);*/

	//2.设A为5*5二维数组，求出现频率最高的数字
	/*int A[6][6] = { {3,2,4,5,1},
{	10,9,3,4,2},
	{8,7,6,7,7},
	{3,3,4,1,2},
	{4,5,3,1,1} }, m = 5, n = 5;
	MP_in_A(A, m, n);*/

	//3.统计字符串中小写字母出现次数
	/*low_count();
	*/

	//4.同
	
	//【题型八】找规律问题 1.输出魔方阵，行和=列和=对角线和
	/*该代码仅实现了任意奇数n阶矩阵的魔方阵。每一行、每一列、对角线之和都相等。
	例如3阶魔方阵如下：     
	8  1  6      
	3  5  7     
	4  9  2
	算法：1,先给备用数组内所有数赋初值0;(下面的i代表行号，j代表列号)(第1步是为第7步做铺垫)          
	2,第0行的中间那个数a[i][j]=0,此时i = 0,j = n/2;	  
	3,当前的数在首行(i=0)时，下一个数放在最后一行(i=n-1)，j++;	  
	4,当前的数在最后一列(j=n-1)时，下一个数放在第一列(j=0)，i--;	 
	5,如果同时满足了(i=0和j=n-1)，那么进行i=n-1,j=0;	  
	6,如果3.4.5都不满足，就进行i--,j++;	  
	7,经过上面3步的判断，找到了新的i和j的值，如果此时a[i][j]放的值是0，代表这地方未被用过，可放下一个数；	    
		如果此时这里放的不是0，代表已经被用过了，那么下一个数就直接放到这个数的前面那个数的的下面	   
		（比如本例n=3时：4本该放到a[0][1]的，但a[0][1]被1占了，所以，就直接把4放到4的前面那个数3的下面咯。）
	magic_fun();
	*/

	//2.求分数序列2/1，3/2，5/3，8/5，13/8，21/13···前20项的和 略

	//3.顺序生成如下前100项：
	/*规则a:n1=2,n2=3;
	规则b:若前两项乘积为一位数，则此数为后继；
	否则十位和个位依次为后继2项*/
	/*int a[100] = { 2,3 };
	n_100(100, a, 2);*/
	
	//4.计算调和分数前N项和，输出精确分数A/B
	/*harmonic_series(10);
	//太大则溢出*/

	//5.计算输出前100项,a1=0,a2=1,其后奇数项为前两项和,否则为前两项差 略
	
	//----习题2----
	
	//【题型一】集合
	//1.打印集合M前100个最小的数：a.整数1属于M b.若n属于M则2n+1和3n+1也属于M
	/*m_100();
	*/

	//【题型二】子集
	//1.输入n,打印集合{0,1,2,3,     ,n-1}的所有子集
	/*int n = 5;
	out_subset(n);*/

	//2.包含N个元素的集合S，输出子集长度为M的子集(穷举法 略)

	//【题型三】进制转换
	//1.输入 16进制 输出 10进制
	/*char n[4] = { '1','1','1','A' };
	trans_sixteen_ten(n,4);*/

	//2.输入 10进制 输出 2进制
	/*trans_ten_two(10);
	*/

	//【题型四】泰勒公式
	//1.求sin(x)近似值,控制误差小于0.00005
	/*double x = 1;
	printf("sin(%10.8lf)结果为:%10.8lf\n", x,sin(x));
	taylor_sin(x);*/

	//2.3.同1 略

	//【题型五】几何问题
	//1.


	

	system("pause");
}



// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
